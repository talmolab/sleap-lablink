# LabLink Allocator Configuration
# This file configures the allocator service and client VM specifications
# Copy to config.yaml and customize for your deployment

db:
  dbname: "lablink_db"
  user: "lablink"
  password: "PLACEHOLDER_DB_PASSWORD"  # Injected from GitHub secret at deploy time
  host: "localhost"
  port: 5432
  table_name: "vms"
  message_channel: "vm_updates"

machine:
  # Client VM instance type (must support your workload)
  machine_type: "g4dn.xlarge"  # GPU instance for ML workloads

  # Docker image for client VMs (use version tags for production)
  image: "ghcr.io/talmolab/lablink-client-base-image:0.0.8a0"

  # AMI ID for your AWS region (Ubuntu 22.04 recommended)
  ami_id: "ami-067cc81f948e50e06"  # us-west-2 Ubuntu 22.04

  # Git repository with your data/code
  repository: "https://github.com/yourusername/your-data-repo.git"

  # Software identifier for your application
  software: "your-software"  # e.g., "sleap", "deeplabcut", "anipose"

  # File extension for your data files
  extension: "ext"  # e.g., "slp" for SLEAP, "h5" for DeepLabCut

app:
  admin_user: "admin"
  admin_password: "PLACEHOLDER_ADMIN_PASSWORD"  # Injected from GitHub secret at deploy time
  region: "us-west-2"  # Your AWS region

dns:
  enabled: false  # Set to true if using Route53
  terraform_managed: false  # false = manual DNS records, true = Terraform creates/destroys records
  domain: "example.com"  # Your domain
  zone_id: ""  # (Optional) Hardcode zone ID to skip lookup
  app_name: "lablink"
  pattern: "auto"  # auto, custom
  custom_subdomain: ""
  create_zone: false

eip:
  strategy: "persistent"  # "persistent" = reuse tagged EIP, "dynamic" = create new EIP each time
  tag_name: "lablink-eip"  # Tag Name to identify reusable EIP (used with persistent strategy)

ssl:
  provider: "letsencrypt"  # "letsencrypt" = Caddy auto-SSL, "cloudflare" = CloudFlare proxy, "none" = HTTP only
  email: "admin@example.com"  # Email for Let's Encrypt notifications
  staging: false  # true = HTTP only (unlimited testing), false = HTTPS with trusted Let's Encrypt certs (rate limited)

# S3 bucket for Terraform state (must be unique globally)
bucket_name: "tf-state-lablink-allocator-bucket-YOUR-UNIQUE-SUFFIX"
